// Code generated by ent, DO NOT EDIT.

package crawledurl

import (
	"time"
)

const (
	// Label holds the string label denoting the crawledurl type in the database.
	Label = "crawled_url"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldURL holds the string denoting the url field in the database.
	FieldURL = "url"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// EdgeLinkUrls holds the string denoting the link_urls edge name in mutations.
	EdgeLinkUrls = "link_urls"
	// Table holds the table name of the crawledurl in the database.
	Table = "crawled_urls"
	// LinkUrlsTable is the table that holds the link_urls relation/edge. The primary key declared below.
	LinkUrlsTable = "crawled_url_link_urls"
	// LinkUrlsInverseTable is the table name for the LinkUrl entity.
	// It exists in this package in order to avoid circular dependency with the "linkurl" package.
	LinkUrlsInverseTable = "link_urls"
)

// Columns holds all SQL columns for crawledurl fields.
var Columns = []string{
	FieldID,
	FieldURL,
	FieldCreatedAt,
	FieldUpdatedAt,
}

var (
	// LinkUrlsPrimaryKey and LinkUrlsColumn2 are the table columns denoting the
	// primary key for the link_urls relation (M2M).
	LinkUrlsPrimaryKey = []string{"crawled_url_id", "link_url_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// URLValidator is a validator for the "url" field. It is called by the builders before save.
	URLValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt time.Time
)
